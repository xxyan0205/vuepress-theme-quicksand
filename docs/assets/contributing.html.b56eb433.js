import{r as e,o as r,c as s,a,F as o,b as n,d}from"./app.bd6623af.js";const t={},i=a("h1",{id:"contributing-guide",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#contributing-guide","aria-hidden":"true"},"#"),n(" Contributing Guide")],-1),c=a("h2",{id:"overview",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),n(" Overview")],-1),l=n("This repository employs a "),p={href:"https://en.wikipedia.org/wiki/Monorepo",target:"_blank",rel:"noopener noreferrer"},u=n("monorepo"),h=n(" setup with "),b={href:"https://classic.yarnpkg.com/en/docs/workspaces",target:"_blank",rel:"noopener noreferrer"},f=n("yarn classic workspaces"),v=n(", and hosts a number of associated but separated packages in the "),y=a("code",null,"packages",-1),m=n(" directory:"),g=d('<ul><li><p><code>@vuepress/core</code>: The VuePress core. Provides pure Node API to generate VuePress app, including page handling, plugin system and data preparation.</p></li><li><p><code>@vuepress/client</code>: The VuePress client package. Provides the client entry, and exports types and composable utils that can be used in client side development.</p></li><li><p><code>@vuepress/bundler-vite</code>: The VuePress bundler package with vite. Use vite to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/bundler-webpack</code>: The VuePress bundler package with webpack. Use webpack to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/cli</code>: The VuePress command line interface (CLI) package. It will resolve user config file, and create VuePress app with <code>@vuepress/core</code>, then use <code>@vuepress/bundler-${name}</code> to execute corresponding command.</p></li><li><p><code>@vuepress/theme-default</code>: The VuePress default theme.</p></li><li><p><code>@vuepress/plugin-${name}</code>: Official plugins.</p></li><li><p><code>@vuepress/shared</code>: Utilities that shared between node side and client side.</p></li><li><p><code>@vuepress/utils</code>: Utilities that should only be used in node side.</p></li><li><p><code>vuepress</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-webpack</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with webpack, they can simply install this package.</p></li><li><p><code>vuepress-vite</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-vite</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with vite, they can simply install this package.</p></li></ul><h2 id="development-setup" tabindex="-1"><a class="header-anchor" href="#development-setup" aria-hidden="true">#</a> Development Setup</h2><p>Pre-requirement:</p>',3),w={href:"http://nodejs.org",target:"_blank",rel:"noopener noreferrer"},k=n("Node.js"),x=n(),P=a("strong",null,"version 12+",-1),T={href:"https://classic.yarnpkg.com/en/docs/install",target:"_blank",rel:"noopener noreferrer"},V=n("Yarn v1 classic"),_=d('<p>Clone the repo, and install dependencies:</p><div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><p>Start watching source files:</p><div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><p>Open another terminal, and start developing the documentation site:</p><div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> docs:dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><p>Main tools that used in this project:</p>',7),j={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},S=n("TypeScript"),I=n(" as the development language"),C={href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"},U=n("Jest"),Y=n(" for unit testing"),A={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},L=n("ESLint"),N=n(" + "),O={href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"},D=n("Prettier"),E=n(" for code linting and formatting"),z=d('<h2 id="scripts" tabindex="-1"><a class="header-anchor" href="#scripts" aria-hidden="true">#</a> Scripts</h2><h3 id="yarn-build" tabindex="-1"><a class="header-anchor" href="#yarn-build" aria-hidden="true">#</a> <code>yarn build</code></h3><p>The <code>build</code> script uses <code>tsc</code> to compile typescript source files to javascript dist files.</p><p>You may need to run this script first after your clone this repository, because the dist files are ignored by <code>.gitignore</code>.</p><h3 id="yarn-copy" tabindex="-1"><a class="header-anchor" href="#yarn-copy" aria-hidden="true">#</a> <code>yarn copy</code></h3><p>The <code>copy</code> script of root project runs <code>copy</code> script in all packages, copying some resources from source directory to dist directory.</p><p>Some source files (e.g. <code>.vue</code>, <code>.css</code> files) can not be processed by <code>build</code> script, but should keep the same relative path in the dist directory.</p><p>You may need to run this script after your clone this repository, too.</p><h3 id="yarn-dev" tabindex="-1"><a class="header-anchor" href="#yarn-dev" aria-hidden="true">#</a> <code>yarn dev</code></h3><p>The <code>dev</code> script runs <code>copy</code> and <code>build</code> scripts in watch mode.</p><h3 id="yarn-clean" tabindex="-1"><a class="header-anchor" href="#yarn-clean" aria-hidden="true">#</a> <code>yarn clean</code></h3><p>The <code>clean</code> script runs <code>clean</code> script in all packages, cleaning all the dist files and caches. In other words, it will remove all the files that generated by <code>build</code>, <code>copy</code> and <code>dev</code> scripts.</p><p>It&#39;s used before you want to re-build source files from a clean / initial state.</p><h3 id="yarn-docs" tabindex="-1"><a class="header-anchor" href="#yarn-docs" aria-hidden="true">#</a> <code>yarn docs:*</code></h3><h4 id="yarn-docs-build-yarn-docs-dev-yarn-docs-clean" tabindex="-1"><a class="header-anchor" href="#yarn-docs-build-yarn-docs-dev-yarn-docs-clean" aria-hidden="true">#</a> <code>yarn docs:build</code>, <code>yarn docs:dev</code>, <code>yarn docs:clean</code></h4><p>The <code>docs:</code> prefix indicates that these scripts are for documentation, i.e. the <code>docs</code> directory.</p><p>VuePress is using itself to build its own documentation site.</p><p>You need to run <code>yarn build &amp;&amp; yarn copy</code> to build VuePress source files first, then run these <code>docs:</code> scripts to develop and build our documentation.</p><h4 id="yarn-docs-serve" tabindex="-1"><a class="header-anchor" href="#yarn-docs-serve" aria-hidden="true">#</a> <code>yarn docs:serve</code></h4><p>Serve the documentation site locally.</p><p>You need to run <code>yarn docs:build</code> first to generate the documentation dist files, and then run <code>yarn docs:serve</code> to serve them.</p><h3 id="yarn-lint" tabindex="-1"><a class="header-anchor" href="#yarn-lint" aria-hidden="true">#</a> <code>yarn lint</code></h3><p>The <code>lint</code> script uses ESLint to check all source files.</p><h3 id="yarn-test" tabindex="-1"><a class="header-anchor" href="#yarn-test" aria-hidden="true">#</a> <code>yarn test</code></h3><p>The <code>test</code> script uses Jest to run unit testings.</p><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h2><p>VuePress documentation is powered by VuePress itself, which is built from the source code of this repository.</p><p>All the markdown source files are placed in <code>docs</code> directory. We are maintaining two translations:</p><ul><li>English (en-US) in <code>/</code> path</li><li>Chinese (zh-CN) in <code>/zh/</code> path</li></ul><p>We have two different deployments:</p>',30),G=n("Release deployment powered by "),J={href:"https://www.netlify.com",target:"_blank",rel:"noopener noreferrer"},M=n("Netlify"),W=n(". This deployment is built from the latest released version, so users will not see unreleased changes. The domain name is "),$={href:"https://v2.vuepress.vuejs.org",target:"_blank",rel:"noopener noreferrer"},q=n("https://v2.vuepress.vuejs.org"),F=n("."),H=n("Developer deployment powered by "),R={href:"https://pages.github.com",target:"_blank",rel:"noopener noreferrer"},B=n("GitHub Pages"),K=n(". This deployment is built from the latest commit, so developers could preview the latest changes. The domain name is "),Q={href:"https://vuepress.github.io",target:"_blank",rel:"noopener noreferrer"},X=n("https://vuepress.github.io"),Z=n(".");t.render=function(n,d){const t=e("OutboundLink");return r(),s(o,null,[i,c,a("p",null,[l,a("a",p,[u,a(t)]),h,a("a",b,[f,a(t)]),v,y,m]),g,a("ul",null,[a("li",null,[a("a",w,[k,a(t)]),x,P]),a("li",null,[a("a",T,[V,a(t)])])]),_,a("ul",null,[a("li",null,[a("a",j,[S,a(t)]),I]),a("li",null,[a("a",C,[U,a(t)]),Y]),a("li",null,[a("a",A,[L,a(t)]),N,a("a",O,[D,a(t)]),E])]),z,a("ul",null,[a("li",null,[G,a("a",J,[M,a(t)]),W,a("a",$,[q,a(t)]),F]),a("li",null,[H,a("a",R,[B,a(t)]),K,a("a",Q,[X,a(t)]),Z])])],64)};export default t;
