import{r as s,o as n,c as a,a as e,w as p,F as r,b as l,d as t}from"./app.bd6623af.js";const o={},c=e("h1",{id:"命令行接口",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#命令行接口","aria-hidden":"true"},"#"),l(" 命令行接口")],-1),i=l("VuePress 命令行接口是由 "),u={href:"https://www.npmjs.com/package/@vuepress/cli",target:"_blank",rel:"noopener noreferrer"},b=l("@vuepress/cli"),d=l(" 包提供的。它是 "),m={href:"https://www.npmjs.com/package/vuepress",target:"_blank",rel:"noopener noreferrer"},h=l("vuepress"),k=l(" 包的依赖之一，当然你也可以单独安装它。"),v=t('<p>执行 <code>vuepress --help</code> 来获取下列帮助信息：</p><div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Usage:\n  $ vuepress <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\nCommands:\n  dev <span class="token punctuation">[</span>sourceDir<span class="token punctuation">]</span>    Start development server\n  build <span class="token punctuation">[</span>sourceDir<span class="token punctuation">]</span>  Build to static site\n  info               Display environment information\n\nFor <span class="token function">more</span> info, run any <span class="token builtin class-name">command</span> with the <span class="token variable"><span class="token variable">`</span>--help<span class="token variable">`</span></span> flag:\n  $ vuepress dev --help\n  $ vuepress build --help\n  $ vuepress info --help\n\nOptions:\n  -v, --version  Display version number \n  -h, --help     Display this message \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></div>',2),f={class:"custom-container tip"},g=e("p",{class:"custom-container-title"},"提示",-1),y=l("VuePress 使用了 "),w={href:"https://www.npmjs.com/package/debug",target:"_blank",rel:"noopener noreferrer"},D=l("debug"),x=l(" 模块。"),S=e("p",null,[l("设置环境变量 "),e("code",null,"DEBUG=vuepress*"),l(" 可以启用调试日志。")],-1),U=t('<h2 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h2><p>启动一个开发服务器，在本地开发你的 VuePress 站点。</p><div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Usage:\n  $ vuepress dev <span class="token punctuation">[</span>sourceDir<span class="token punctuation">]</span>\n\nOptions:\n  -c, --config <span class="token operator">&lt;</span>config<span class="token operator">&gt;</span>  Set path to config <span class="token function">file</span> \n  -p, --port <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>      Use specified port <span class="token punctuation">(</span>default: <span class="token number">8080</span><span class="token punctuation">)</span> \n  -t, --temp <span class="token operator">&lt;</span>temp<span class="token operator">&gt;</span>      Set the directory of the temporary files \n  --host <span class="token operator">&lt;</span>host<span class="token operator">&gt;</span>          Use specified <span class="token function">host</span> <span class="token punctuation">(</span>default: <span class="token number">0.0</span>.0.0<span class="token punctuation">)</span> \n  --cache <span class="token operator">&lt;</span>cache<span class="token operator">&gt;</span>        Set the directory of the cache files \n  --clean-temp           Clean the temporary files before dev \n  --clean-cache          Clean the cache files before dev \n  --open                 Open browser when ready \n  --debug                Enable debug mode \n  --no-watch             Disable watching page and config files <span class="token punctuation">(</span>default: <span class="token boolean">true</span><span class="token punctuation">)</span>\n  -v, --version          Display version number \n  -h, --help             Display this message\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>通过命令行设置的配置项，会覆盖你配置文件中的同名配置项。</p></div><h2 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h2>',5),$=l("将你的 VuePress 站点构建成静态文件，以便你进行后续"),C=l("部署"),O=l("。"),j=t('<div class="theme-code-dark"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Usage:\n  $ vuepress build <span class="token punctuation">[</span>sourceDir<span class="token punctuation">]</span>\n\nOptions:\n  -c, --config <span class="token operator">&lt;</span>config<span class="token operator">&gt;</span>  Set path to config <span class="token function">file</span> \n  -d, --dest <span class="token operator">&lt;</span>dest<span class="token operator">&gt;</span>      Set the directory build output <span class="token punctuation">(</span>default: .vuepress/dist<span class="token punctuation">)</span> \n  -t, --temp <span class="token operator">&lt;</span>temp<span class="token operator">&gt;</span>      Set the directory of the temporary files \n  --cache <span class="token operator">&lt;</span>cache<span class="token operator">&gt;</span>        Set the directory of the cache files \n  --clean-temp           Clean the temporary files before build \n  --clean-cache          Clean the cache files before build \n  --debug                Enable debug mode \n  -v, --version          Display version number \n  -h, --help             Display this message\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>通过命令行设置的配置项，会覆盖你配置文件中的同名配置项。</p></div><h2 id="info" tabindex="-1"><a class="header-anchor" href="#info" aria-hidden="true">#</a> info</h2><p>输出当前系统和依赖相关的信息。</p><p>在你想要检查你的环境，或者提交 Issue 时候，可以使用该命令。</p>',5);o.render=function(l,t){const o=s("NpmBadge"),P=s("OutboundLink"),V=s("RouterLink");return n(),a(r,null,[c,e(o,{package:"@vuepress/cli"}),e("p",null,[i,e("a",u,[b,e(P)]),d,e("a",m,[h,e(P)]),k]),v,e("div",f,[g,e("p",null,[y,e("a",w,[D,e(P)]),x]),S]),U,e("p",null,[$,e(V,{to:"/zh/guide/deployment.html"},{default:p((()=>[C])),_:1}),O]),j],64)};export default o;
