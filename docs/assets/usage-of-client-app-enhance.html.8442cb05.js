import{r as n,o as s,c as a,a as e,w as p,F as t,b as o,d as c}from"./app.e548ecbe.js";const l={},u=e("h1",{id:"client-app-enhance-的使用方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#client-app-enhance-的使用方法","aria-hidden":"true"},"#"),o(" Client App Enhance 的使用方法")],-1),r=o("插件 API 提供的 "),i=o("clientAppEnhanceFiles"),k=o(" Hook 允许你设置 Client App Enhance 文件的路径。你可以在你的插件或者主题中使用它："),d=c('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span>\n\n<span class="token keyword">const</span> pluginOrTheme <span class="token operator">=</span> <span class="token punctuation">{</span>\n  clientAppEnhanceFiles<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/clientAppEnhance.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>',1),m=o("然后，创建 "),b=e("code",null,"clientAppEnhance.ts",-1),h=o(" 文件。你可以使用 "),f=o("defineClientAppEnhance"),g=o(" Helper 来获取类型提示。注意这个函数既可以是同步的，也可以是异步的。"),v=c('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientAppEnhance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientAppEnhance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>',1),y=e("code",null,"app",-1),w=o(" 是由 "),E={href:"https://v3.cn.vuejs.org/api/application-api.html",target:"_blank",rel:"noopener noreferrer"},_=o("createApp"),A=o(" 创建的 Vue 应用实例。"),C=e("code",null,"router",-1),x=o(" 是由 "),S={href:"https://next.router.vuejs.org/zh/api/index.html#createrouter",target:"_blank",rel:"noopener noreferrer"},z=o("createRouter"),R=o(" 创建的路由实例。"),M=e("code",null,"siteData",-1),j=o(" 是一个根据用户配置生成的对象，包含 "),D=o("base"),F=o(", "),V=o("lang"),O=o(", "),P=o("title"),B=o(", "),H=o("description"),I=o(", "),L=o("head"),T=o(" 和 "),q=o("locales"),G=o("。"),J=e("p",null,"Client App Enhance 会在客户端应用创建后被调用，它可以为 Vue 应用添加任意功能。",-1),K=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"提示"),e("p",null,[o("为了方便用户配置使用， "),e("code",null,".vuepress/clientAppEnhance.{js,ts}"),o(" 文件会被隐式地用作 Client App Enhance 文件，除非你在配置文件中显式设置了 "),e("code",null,"clientAppEnhanceFiles"),o(" 。")])],-1),N=e("h2",{id:"注册-vue-组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#注册-vue-组件","aria-hidden":"true"},"#"),o(" 注册 Vue 组件")],-1),Q=o("你可以通过 "),U={href:"https://v3.cn.vuejs.org/api/application-api.html#component",target:"_blank",rel:"noopener noreferrer"},W=o("component"),X=o(" 方法来注册 Vue 全局组件："),Y=c('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientAppEnhance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>\n<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientAppEnhance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><h2 id="使用不支持-ssr-的功能" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能" aria-hidden="true">#</a> 使用不支持 SSR 的功能</h2><p>VuePress 会在构建过程中生成一个 SSR 应用，用以对页面进行预渲染。一般而言，如果一段代码在客户端应用 Mount 之前就使用了浏览器或 DOM API ，我们就认为其对 SSR 不友好，即不支持 SSR 。</p>',3),Z=o("我们已经提供了一个 "),$=o("ClientOnly"),nn=o(" 组件来包裹不支持 SSR 的内容。"),sn=o("在 Client App Enhance 文件中，你可以使用 "),an=e("code",null,[o("_"),e("wbr"),o("_SSR__")],-1),en=o(" 标记来处理这种情况。"),pn=c('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientAppEnhance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientAppEnhance</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_<wbr>_SSR__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> nonSsrFriendlyModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;non-ssr-friendly-module&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><h2 id="使用-router-方法" tabindex="-1"><a class="header-anchor" href="#使用-router-方法" aria-hidden="true">#</a> 使用 Router 方法</h2>',2),tn=o("你可以使用 vue-router 提供的 "),on={href:"https://next.router.vuejs.org/zh/api/index.html#router-%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},cn=o("Router 方法"),ln=o(" 。例如，添加导航钩子："),un=c('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientAppEnhance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientAppEnhance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before navigation&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after navigation&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>我们不推荐使用 <code>addRoute</code> 方法来添加动态路由，因为这些路由记录 <strong>不会</strong> 在构建模式中被预渲染出来。</p><p>当然，如果你了解了这种用法的缺点，你还是可以这样使用。</p></div>',2);l.render=function(o,c){const l=n("RouterLink"),rn=n("OutboundLink");return s(),a(t,null,[u,e("p",null,[r,e(l,{to:"/zh/reference/plugin-api.html#clientappenhancefiles"},{default:p((()=>[i])),_:1}),k]),d,e("p",null,[m,b,h,e(l,{to:"/zh/reference/client-api.html#defineclientappenhance"},{default:p((()=>[f])),_:1}),g]),v,e("ul",null,[e("li",null,[y,w,e("a",E,[_,e(rn)]),A]),e("li",null,[C,x,e("a",S,[z,e(rn)]),R]),e("li",null,[M,j,e(l,{to:"/zh/reference/config.html#base"},{default:p((()=>[D])),_:1}),F,e(l,{to:"/zh/reference/config.html#lang"},{default:p((()=>[V])),_:1}),O,e(l,{to:"/zh/reference/config.html#title"},{default:p((()=>[P])),_:1}),B,e(l,{to:"/zh/reference/config.html#description"},{default:p((()=>[H])),_:1}),I,e(l,{to:"/zh/reference/config.html#head"},{default:p((()=>[L])),_:1}),T,e(l,{to:"/zh/reference/config.html#locales"},{default:p((()=>[q])),_:1}),G])]),J,K,N,e("p",null,[Q,e("a",U,[W,e(rn)]),X]),Y,e("p",null,[Z,e(l,{to:"/zh/reference/components.html#clientonly"},{default:p((()=>[$])),_:1}),nn]),e("p",null,[sn,e(l,{to:"/zh/reference/client-api.html#ssr"},{default:p((()=>[an])),_:1}),en]),pn,e("p",null,[tn,e("a",on,[cn,e(rn)]),ln]),un],64)};export default l;
