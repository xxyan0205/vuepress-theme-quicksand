import{r as n,o as a,c as s,a as e,w as t,F as p,b as o,d as l}from"./app.e548ecbe.js";const i={},r=e("h1",{id:"container",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),o(" container")],-1),c=e("p",null,"Register markdown custom containers in your VuePress site.",-1),u=o("This plugin simplifies the use of "),d={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},k=o("markdown-it-container"),h=o(", but also retains its original capabilities."),b=o("The "),f=o("Custom Containers"),m=o(" of default theme is powered by this plugin."),g=l('<h2 id="container-syntax" tabindex="-1"><a class="header-anchor" href="#container-syntax" aria-hidden="true">#</a> Container Syntax</h2><div class="theme-code-dark"><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>::: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span> [info]\n[content]\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><ul><li>The <code>type</code> is required and should be specified via <a href="#type">type</a> option.</li><li>The <code>info</code> is optional, and the default value can be specified via <code>defaultInfo</code> in <a href="#locales">locales</a> option.</li><li>The <code>content</code> can be any valid markdown content.</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This plugin can be used multiple times to support different types of containers.</p></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>',6),v=e("li",null,[e("p",null,[o("Type: "),e("code",null,"string")])],-1),y=e("p",null,"Details:",-1),w=e("p",null,"The type of the container.",-1),x=o("It will be used as the "),T=e("code",null,"name",-1),I=o(" param of "),D={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},_=o("markdown-it-container"),q=o("."),R=l('<h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>Type: <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>Details:</p><p>The default <code>info</code> of the container in different locales.</p><p>If this option is not specified, the default <code>info</code> will fallback to the uppercase of the <a href="#type">type</a> option.</p></li><li><p>Example:</p></li></ul><div class="theme-code-dark"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@vuepress/container&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;tip&#39;</span><span class="token punctuation">,</span>\n        locales<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            defaultInfo<span class="token operator">:</span> <span class="token string">&#39;TIP&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            defaultInfo<span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div>',3),j=o("Also see: "),C=o("Guide > I18n"),A=l('<h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">(</span>info<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span>\n  <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;custom-container </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p class=&quot;custom-container-title&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><ul><li><p>Details:</p><p>A function to render the starting tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#after">after</a> option.</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;&lt;/div&gt;\\n&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><ul><li><p>Details:</p><p>A function to render the ending tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#before">before</a> option.</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>Type:</li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MarkdownItContainerRenderFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n  tokens<span class="token operator">:</span> Token<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n  env<span class="token operator">:</span> MarkdownEnv<span class="token punctuation">,</span>\n  self<span class="token operator">:</span> Renderer\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div>',11),P=e("p",null,"Details:",-1),$=o("The "),E=e("code",null,"render",-1),F=o(" option of "),L={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},M=o("markdown-it-container"),O=o("."),z=e("p",null,[o("This plugin uses a default "),e("code",null,"render"),o(" function. If you specify this option, the default "),e("code",null,"render"),o(" function will be replaced, and the "),e("a",{href:"#locales"},"locales"),o(", "),e("a",{href:"#before"},"before"),o(" and "),e("a",{href:"#after"},"after"),o(" options will be ignored.")],-1),B=e("h3",{id:"validate",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#validate","aria-hidden":"true"},"#"),o(" validate")],-1),G=e("li",null,[e("p",null,[o("Type: "),e("code",null,"(params: string) => boolean")])],-1),N=e("p",null,"Details:",-1),S=o("The "),V=e("code",null,"validate",-1),H=o(" option of "),J={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},K=o("markdown-it-container"),Q=o("."),U=e("h3",{id:"marker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#marker","aria-hidden":"true"},"#"),o(" marker")],-1),W=e("li",null,[e("p",null,[o("Type: "),e("code",null,"string")])],-1),X=e("p",null,"Details:",-1),Y=o("The "),Z=e("code",null,"marker",-1),nn=o(" option of "),an={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},sn=o("markdown-it-container"),en=o(".");i.render=function(o,l){const i=n("NpmBadge"),tn=n("OutboundLink"),pn=n("RouterLink");return a(),s(p,null,[r,e(i,{package:"@vuepress/plugin-container"}),c,e("p",null,[u,e("a",d,[k,e(tn)]),h]),e("p",null,[b,e(pn,{to:"/reference/default-theme/markdown.html#custom-containers"},{default:t((()=>[f])),_:1}),m]),g,e("ul",null,[v,e("li",null,[y,w,e("p",null,[x,T,I,e("a",D,[_,e(tn)]),q])])]),R,e("ul",null,[e("li",null,[j,e("ul",null,[e("li",null,[e(pn,{to:"/guide/i18n.html"},{default:t((()=>[C])),_:1})])])])]),A,e("ul",null,[e("li",null,[P,e("p",null,[$,E,F,e("a",L,[M,e(tn)]),O]),z])]),B,e("ul",null,[G,e("li",null,[N,e("p",null,[S,V,H,e("a",J,[K,e(tn)]),Q])])]),U,e("ul",null,[W,e("li",null,[X,e("p",null,[Y,Z,nn,e("a",an,[sn,e(tn)]),en])])])],64)};export default i;
