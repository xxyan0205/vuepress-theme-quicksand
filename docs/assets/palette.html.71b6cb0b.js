import{r as s,o as e,c as a,a as n,F as t,b as l,d as p}from"./app.48991ef1.js";const o={},i=n("h1",{id:"palette",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#palette","aria-hidden":"true"},"#"),l(" palette")],-1),c=n("p",null,"Provide palette support for your theme.",-1),r=n("p",null,"This plugin is mainly used to develop themes, and has been integrated into the default theme. You won't need to use it directly in most cases.",-1),u=n("p",null,"For theme authors, this plugin will help you to provide styles customization for users.",-1),d=n("h2",{id:"palette-and-style",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#palette-and-style","aria-hidden":"true"},"#"),l(" Palette and Style")],-1),h=n("p",null,[l("This plugin will provide a "),n("code",null,"@vuepress/plugin-palette/palette"),l(" (palette file) and a "),n("code",null,"@vuepress/plugin-palette/style"),l(" (style file) to be imported in your theme styles.")],-1),m=l("The palette file is used for defining style variables, so it's likely to be imported at the beginning of your theme styles. For example, users can define "),k={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer"},b=l("CSS variables"),y=l(", "),f={href:"https://sass-lang.com/documentation/variables",target:"_blank",rel:"noopener noreferrer"},g=l("SASS variables"),v=l(", "),x={href:"http://lesscss.org/features/#variables-feature",target:"_blank",rel:"noopener noreferrer"},S=l("LESS variables"),T=l(" or "),P={href:"https://stylus-lang.com/docs/variables.html",target:"_blank",rel:"noopener noreferrer"},F=l("Stylus variables"),q=l(" in the palette, and then you can use those variables in your theme styles."),D=p('<p>The style file is used for overriding the default styles or adding extra styles, so it&#39;s likely to be imported at the end of your theme styles.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Use this plugin in your theme, assuming you are using SASS:</p><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@vuepress/plugin-palette&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> preset<span class="token operator">:</span> <span class="token string">&#39;sass&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><p>Import the palette and style in the <code>Layout.vue</code> of your theme:</p><div class="theme-code-dark"><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>palette-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello, Palette!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token comment">/* import variables from palette */</span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&#39;@vuepress/plugin-palette/palette&#39;</span><span class="token punctuation">;</span></span>\n\n<span class="token comment">/* set default value for variables */</span>\n$<span class="token property">color</span><span class="token punctuation">:</span> red !default<span class="token punctuation">;</span>\n\n<span class="token comment">/* use variables in your styles */</span>\n<span class="token selector">.palette-title</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> $color<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@vuepress/plugin-palette/style<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div><p>Then users can customize variables in <code>.vuepress/styles/palette.scss</code>:</p><div class="theme-code-dark"><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color</span></span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><p>And add extra styles in <code>.vuepress/styles/index.scss</code>:</p><div class="theme-code-dark"><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">:root </span><span class="token punctuation">{</span>\n  <span class="token property">scroll-behavior</span><span class="token punctuation">:</span> smooth<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="preset" tabindex="-1"><a class="header-anchor" href="#preset" aria-hidden="true">#</a> preset</h3><ul><li><p>Type: <code>&#39;css&#39; | &#39;sass&#39; | &#39;less&#39; | &#39;stylus&#39;</code></p></li><li><p>Default: <code>&#39;css&#39;</code></p></li><li><p>Details:</p><p>Set preset for other options.</p><p>If you don&#39;t need advanced customization of the plugin, it&#39;s recommended to only set this option and omit other options.</p></li></ul><h3 id="userpalettefile" tabindex="-1"><a class="header-anchor" href="#userpalettefile" aria-hidden="true">#</a> userPaletteFile</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Default:</p><ul><li>css: <code>&#39;.vuepress/styles/palette.css&#39;</code></li><li>sass: <code>&#39;.vuepress/styles/palette.scss&#39;</code></li><li>less: <code>&#39;.vuepress/styles/palette.less&#39;</code></li><li>stylus: <code>&#39;.vuepress/styles/palette.styl&#39;</code></li></ul></li><li><p>Details:</p><p>File path of the user palette file, relative to source directory.</p><p>The default value depends on the <a href="#preset">preset</a> option.</p><p>The file is where users define style variables, and it&#39;s recommended to keep the default file path as a convention.</p></li></ul><h3 id="temppalettefile" tabindex="-1"><a class="header-anchor" href="#temppalettefile" aria-hidden="true">#</a> tempPaletteFile</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Default:</p><ul><li>css: <code>&#39;styles/palette.css&#39;</code></li><li>sass: <code>&#39;styles/palette.scss&#39;</code></li><li>less: <code>&#39;styles/palette.less&#39;</code></li><li>stylus: <code>&#39;styles/palette.styl&#39;</code></li></ul></li><li><p>Details:</p><p>File path of the generated palette temp file, relative to temp directory.</p><p>The default value depends on the <a href="#preset">preset</a> option.</p><p>You should import the palette file via <code>&#39;@vuepress/plugin-palette/palette&#39;</code> alias, so you don&#39;t need to change this option in most cases.</p></li></ul><h3 id="userstylefile" tabindex="-1"><a class="header-anchor" href="#userstylefile" aria-hidden="true">#</a> userStyleFile</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Default:</p><ul><li>css: <code>&#39;.vuepress/styles/index.css&#39;</code></li><li>sass: <code>&#39;.vuepress/styles/index.scss&#39;</code></li><li>less: <code>&#39;.vuepress/styles/index.less&#39;</code></li><li>stylus: <code>&#39;.vuepress/styles/index.styl&#39;</code></li></ul></li><li><p>Details:</p><p>File path of the user style file, relative to source directory.</p><p>The default value depends on the <a href="#preset">preset</a> option.</p><p>The file is where users override default styles or add extra styles, and it&#39;s recommended to keep the default file path as a convention.</p></li></ul><h3 id="tempstylefile" tabindex="-1"><a class="header-anchor" href="#tempstylefile" aria-hidden="true">#</a> tempStyleFile</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Default:</p><ul><li>css: <code>&#39;styles/index.css&#39;</code></li><li>sass: <code>&#39;styles/index.scss&#39;</code></li><li>less: <code>&#39;styles/index.less&#39;</code></li><li>stylus: <code>&#39;styles/index.styl&#39;</code></li></ul></li><li><p>Details:</p><p>File path of the generated style temp file, relative to temp directory.</p><p>The default value depends on the <a href="#preset">preset</a> option.</p><p>You should import the style file via <code>&#39;@vuepress/plugin-palette/style&#39;</code> alias, so you don&#39;t need to change this option in most cases.</p></li></ul><h3 id="importcode" tabindex="-1"><a class="header-anchor" href="#importcode" aria-hidden="true">#</a> importCode</h3><ul><li><p>Type: <code>(filePath: string) =&gt; string</code></p></li><li><p>Default:</p><ul><li>css: <code>(filePath) =&gt; `@import &#39;${filePath}&#39;;\\n`</code></li><li>sass: <code>(filePath) =&gt; `@forward &#39;${filePath}&#39;;\\n`</code></li><li>less: <code>(filePath) =&gt; `@import &#39;${filePath}&#39;;\\n`</code></li><li>stylus: <code>(filePath) =&gt; `@require &#39;${filePath}&#39;;\\n`</code></li></ul></li><li><p>Details:</p><p>Function to generate import code.</p><p>The default value depends on the <a href="#preset">preset</a> option.</p><p>This option is used for generating <a href="#temppalettefile">tempPaletteFile</a> and <a href="#tempstylefile">tempStyleFile</a>, and you don&#39;t need to change this option in most cases.</p></li></ul>',23);o.render=function(l,p){const o=s("NpmBadge"),w=s("OutboundLink");return e(),a(t,null,[i,n(o,{package:"@vuepress/plugin-palette"}),c,r,u,d,h,n("p",null,[m,n("a",k,[b,n(w)]),y,n("a",f,[g,n(w)]),v,n("a",x,[S,n(w)]),T,n("a",P,[F,n(w)]),q]),D],64)};export default o;
