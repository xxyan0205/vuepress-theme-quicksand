import{r as n,o as a,c as s,a as e,w as t,F as p,b as l,d as o}from"./app.e548ecbe.js";const r={},i=e("h1",{id:"container",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),l(" container")],-1),c=e("p",null,"为你的 VuePress 站点注册自定义容器。",-1),u=l("该插件简化了 "),d={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},k=l("markdown-it-container"),b=l(" 的使用方法，但同时也保留了其原本的能力。"),m=l("默认主题的 "),h=l("自定义容器"),g=l(" 就是由该插件支持的。"),f=o('<h2 id="容器语法" tabindex="-1"><a class="header-anchor" href="#容器语法" aria-hidden="true">#</a> 容器语法</h2><div class="theme-code-dark"><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>::: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span> [info]\n[content]\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><ul><li><code>type</code> 是必需的，应通过 <a href="#type">type</a> 配置项来指定。</li><li><code>info</code> 是可选的，其默认值可以通过 <a href="#locales">locales</a> 的 <code>defaultInfo</code> 配置项来指定。</li><li><code>content</code> 可是任何合法的 Markdown 内容。</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该插件可以被多次使用，以便支持不同类型的容器。</p></div><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>',6),v=e("li",null,[e("p",null,[l("类型： "),e("code",null,"string")])],-1),w=e("p",null,"详情：",-1),y=e("p",null,"容器的类型。",-1),x=l("它将会被用作 "),E={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},A=l("markdown-it-container"),B=l(" 的 "),_=e("code",null,"name",-1),I=l(" 参数。"),j=o('<h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>类型： <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>详情：</p><p>容器在不同 locales 下的默认 <code>info</code> 。</p><p>如果没有指定该配置项，默认 <code>info</code> 会使用大写的 <a href="#type">type</a> 。</p></li><li><p>示例：</p></li></ul><div class="theme-code-dark"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;@vuepress/container&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;tip&#39;</span><span class="token punctuation">,</span>\n        locales<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            defaultInfo<span class="token operator">:</span> <span class="token string">&#39;TIP&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            defaultInfo<span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div>',3),q=l("参考： "),F=l("指南 > 多语言支持"),R=o('<h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3><ul><li><p>类型： <code>(info: string) =&gt; string</code></p></li><li><p>默认值：</p></li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">(</span>info<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span>\n  <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;custom-container </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p class=&quot;custom-container-title&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><ul><li><p>详情：</p><p>一个用于渲染容器起始标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#after">after</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>类型： <code>(info: string) =&gt; string</code></p></li><li><p>默认值：</p></li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;&lt;/div&gt;\\n&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><ul><li><p>详情：</p><p>一个用于渲染容器结束标签的函数。</p><p>第一个参数是 <a href="#%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95">容器语法</a> 的 <code>info</code> 部分。</p><p>如果你没有设置 <a href="#before">before</a> 配置项，则该配置项也不会生效。</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>类型：</li></ul><div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MarkdownItContainerRenderFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n  tokens<span class="token operator">:</span> Token<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n  env<span class="token operator">:</span> MarkdownEnv<span class="token punctuation">,</span>\n  self<span class="token operator">:</span> Renderer\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div>',11),z=e("p",null,"详情：",-1),M={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},$=l("markdown-it-container"),D=l(" 的 "),L=e("code",null,"render",-1),P=l(" 配置项。"),T=e("p",null,[l("该插件使用了一个默认的 "),e("code",null,"render"),l(" 函数。但如果你指定了该配置项，那么默认的 "),e("code",null,"render"),l(" 函数就会被替换掉，此时 "),e("a",{href:"#locales"},"locales"),l(" 、 "),e("a",{href:"#before"},"before"),l(" 和 "),e("a",{href:"#after"},"after"),l(" 配置项都会被忽略。")],-1),C=e("h3",{id:"validate",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#validate","aria-hidden":"true"},"#"),l(" validate")],-1),N=e("li",null,[e("p",null,[l("类型： "),e("code",null,"(params: string) => boolean")])],-1),O=e("p",null,"详情：",-1),V={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},G=l("markdown-it-container"),H=l(" 的 "),J=e("code",null,"validate",-1),K=l(" 配置项。"),Q=e("h3",{id:"marker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#marker","aria-hidden":"true"},"#"),l(" marker")],-1),S=e("li",null,[e("p",null,[l("类型： "),e("code",null,"string")])],-1),U=e("p",null,"详情：",-1),W={href:"https://github.com/markdown-it/markdown-it-container#api",target:"_blank",rel:"noopener noreferrer"},X=l("markdown-it-container"),Y=l(" 的 "),Z=e("code",null,"marker",-1),nn=l(" 配置项。");r.render=function(l,o){const r=n("NpmBadge"),an=n("OutboundLink"),sn=n("RouterLink");return a(),s(p,null,[i,e(r,{package:"@vuepress/plugin-container"}),c,e("p",null,[u,e("a",d,[k,e(an)]),b]),e("p",null,[m,e(sn,{to:"/zh/reference/default-theme/markdown.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%B9%E5%99%A8"},{default:t((()=>[h])),_:1}),g]),f,e("ul",null,[v,e("li",null,[w,y,e("p",null,[x,e("a",E,[A,e(an)]),B,_,I])])]),j,e("ul",null,[e("li",null,[q,e("ul",null,[e("li",null,[e(sn,{to:"/zh/guide/i18n.html"},{default:t((()=>[F])),_:1})])])])]),R,e("ul",null,[e("li",null,[z,e("p",null,[e("a",M,[$,e(an)]),D,L,P]),T])]),C,e("ul",null,[N,e("li",null,[O,e("p",null,[e("a",V,[G,e(an)]),H,J,K])])]),Q,e("ul",null,[S,e("li",null,[U,e("p",null,[e("a",W,[X,e(an)]),Y,Z,nn])])])],64)};export default r;
