import{r as n,o as e,c as a,a as s,F as t,b as l,d as o}from"./app.e548ecbe.js";const i={},p=s("h1",{id:"built-in-components",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#built-in-components","aria-hidden":"true"},"#"),l(" Built-in Components")],-1),c=o('<h2 id="clientonly" tabindex="-1"><a class="header-anchor" href="#clientonly" aria-hidden="true">#</a> ClientOnly</h2><ul><li>Usage:</li></ul><div class="theme-code-dark"><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ClientOnly</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NonSsrFriendlyComponent</span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ClientOnly</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><ul><li><p>Details:</p><p>This component and its children will only be rendered in client-side. That means, it will not be rendered to HTML during build (SSR).</p><p>If a component is trying to access Browser / DOM APIs directly in <code>setup()</code>, an error will occur during build because those APIs are unavailable in Node.js environment. In such case, you could do either:</p><ul><li>Modify the component to only access Browser / DOM APIs in <code>onBeforeMount()</code> or <code>onMounted()</code> hook.</li><li>Wrap the component with <code>&lt;ClientOnly&gt;</code>.</li></ul></li></ul><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> Content</h2><ul><li><p>Props:</p><ul><li>pageKey <ul><li>Type: <code>string</code></li><li>Required: <code>false</code></li></ul></li></ul></li><li><p>Usage:</p></li></ul><div class="theme-code-dark"><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">page-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v-xxxxxx<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div>',7),r=s("p",null,"Details:",-1),d=s("p",null,"This component will render the Markdown content of a page.",-1),u=l("The page key is the "),m={href:"https://next.router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},h=l("name"),g=l(" of the page route. If the "),k=s("code",null,"pageKey",-1),b=l(" prop is not provided, it will render the page of current route."),v=s("p",null,"This component is mainly for developing themes. You won't need it in most cases.",-1),f=o('<h2 id="outboundlink" tabindex="-1"><a class="header-anchor" href="#outboundlink" aria-hidden="true">#</a> OutboundLink</h2><ul><li>Usage:</li></ul><div class="theme-code-dark"><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OutboundLink</span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><ul><li><p>Details:</p><p>This component will render an indicator for links to external URLs.</p><p>This component is mainly for developing themes. You won&#39;t need it in most cases.</p></li></ul>',4);i.render=function(l,o){const i=n("NpmBadge"),y=n("OutboundLink");return e(),a(t,null,[p,s(i,{package:"@vuepress/client"}),c,s("ul",null,[s("li",null,[r,d,s("p",null,[u,s("a",m,[h,s(y)]),g,k,b]),v])]),f],64)};export default i;
