import{r as n,o as s,c as a,a as e,F as o,b as p,d as l}from"./app.bd6623af.js";const t={},i=e("h1",{id:"medium-zoom",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#medium-zoom","aria-hidden":"true"},"#"),p(" medium-zoom")],-1),c=p("将 "),r={href:"https://github.com/francoischalifour/medium-zoom#readme",target:"_blank",rel:"noopener noreferrer"},u=p("medium-zoom"),d=p(" 集成到 VuePress 中，为图片提供可缩放的功能。"),m=l('<p>该插件已经集成到默认主题中。</p><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="selector" tabindex="-1"><a class="header-anchor" href="#selector" aria-hidden="true">#</a> selector</h3><ul><li><p>类型： <code>string</code></p></li><li><p>默认值： <code>&#39;:not(a) &gt; img&#39;</code></p></li><li><p>详情：</p><p>可缩放的图片的选择器。</p><p>默认情况下，该插件会使 <code>&lt;a&gt;</code> 标签以外的所有图片都支持缩放。</p></li></ul><h3 id="delay" tabindex="-1"><a class="header-anchor" href="#delay" aria-hidden="true">#</a> delay</h3><ul><li><p>类型： <code>number</code></p></li><li><p>默认值： <code>500</code></p></li><li><p>详情：</p><p>以毫秒为单位的延迟。</p><p>在切换路由进入一个新页面时，该插件会在一定延迟后才使页面内的图片支持缩放。</p></li></ul><h3 id="zoomoptions" tabindex="-1"><a class="header-anchor" href="#zoomoptions" aria-hidden="true">#</a> zoomOptions</h3>',7),h=e("li",null,[e("p",null,[p("类型： "),e("code",null,"Object")])],-1),k=e("li",null,[e("p",null,"详情："),e("p",null,"medium-zoom 的配置项。")],-1),b=e("p",null,"参考：",-1),f={href:"https://github.com/francoischalifour/medium-zoom#options",target:"_blank",rel:"noopener noreferrer"},g=p("medium-zoom > Options"),z=l('<h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><p>你可以通过 <a href="#zoomoptions">zoomOptions</a> 对大部分的缩放样式进行自定义，不过作为补充，该插件同样提供了一些 CSS 变量：</p><div class="theme-code-dark"><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>File not found</code></pre><div class="line-numbers"></div></div></div><h2 id="composition-api" tabindex="-1"><a class="header-anchor" href="#composition-api" aria-hidden="true">#</a> Composition API</h2><h3 id="usemediumzoom" tabindex="-1"><a class="header-anchor" href="#usemediumzoom" aria-hidden="true">#</a> useMediumZoom</h3>',5),v=e("p",null,"详情：",-1),x=p("返回该插件使用的 "),y=e("code",null,"Zoom",-1),w=p(" 实例，便于你直接使用实例上的 "),O={href:"https://github.com/francoischalifour/medium-zoom#methods",target:"_blank",rel:"noopener noreferrer"},Z=p("methods"),M=p(" 。"),_=e("p",null,"该插件会在切换路由进入当前页面时使图片支持缩放。但如果你要动态添加新图片，那么你可能就需要这个方法来让这些新图片也支持缩放。",-1),j=e("p",null,[p("该插件在 "),e("code",null,"Zoom"),p(" 实例上额外添加了一个 "),e("code",null,"refresh"),p(" 方法，它将使用 "),e("a",{href:"#selector"},"selector"),p(" 作为默认参数，先调用 "),e("code",null,"zoom.detach()"),p(" 再调用 "),e("code",null,"zoom.attach()"),p(" ，便于你快速刷新当前页面图片的缩放状态。")],-1),C=e("li",null,[e("p",null,"示例：")],-1),F=l('<div class="theme-code-dark"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useMediumZoom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/plugin-medium-zoom/lib/client&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> zoom <span class="token operator">=</span> <span class="token function">useMediumZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// ... 进行了一些操作，在当前页面添加了新的图片</span>\n\n    <span class="token comment">// 此时你可能需要手动调用 `refresh` 来让这些新图片支持缩放</span>\n    <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      zoom<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></div>',1);t.render=function(p,l){const t=n("NpmBadge"),P=n("OutboundLink");return s(),a(o,null,[i,e(t,{package:"@vuepress/plugin-medium-zoom"}),e("p",null,[c,e("a",r,[u,e(P)]),d]),m,e("ul",null,[h,k,e("li",null,[b,e("ul",null,[e("li",null,[e("a",f,[g,e(P)])])])])]),z,e("ul",null,[e("li",null,[v,e("p",null,[x,y,w,e("a",O,[Z,e(P)]),M]),_,j]),C]),F],64)};export default t;
